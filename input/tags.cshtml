ArchiveSources: => GetString(GlobalMetadataKeys.BlogSources)
ArchiveFilter: => GetBool("IsActive")
ArchiveKey: Tags
ArchiveKeyComparer: => StringComparer.OrdinalIgnoreCase.ToConvertingEqualityComparer()
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/index.html" : $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/{GetInt("Index")}.html"
ArchivePageSize: => GlobalMetadata.GetPageSize(Document)
ArchiveOrderKey: Published
ArchiveOrderDescending: true
ArchiveTitle: => GetString("GroupKey")

Layout: /_Layout.cshtml
Title: Tags
---

@Html.Partial("_partials/_titleHeader")

@if (Document.ContainsKey(Keys.GroupKey))
{
    <div class="flex justify-center">
        <div class="md:w-8/12 text-center pb-5">
            @foreach (IDocument tag in OutputPages.Get("tags.html").GetChildren().OrderByDescending(x => x.GetChildren().Count()))
            {
                if (!string.IsNullOrEmpty(tag.GetTitle()))
                {
                    string badgeStyle = Document.GetString(Keys.GroupKey).Equals(tag.GetTitle(), StringComparison.OrdinalIgnoreCase) ? "bg-green-500" : "";
                    string postCount = tag.GetChildren().Count().ToString();

                    <a href="@Context.GetLink(tag)" class="inline-block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 @badgeStyle"> @tag.GetTitle() (@postCount)</a>
                }
            }
        </div>
    </div>

    <div class="flex flex-wrap justify-center">
        <div class="md:w-12/12">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4 mb-4">
                @foreach (IDocument document in Document.GetChildren())
                {
                    @Html.Partial("/_partials/_post.cshtml", document)
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="flex justify-center">
        <div class="md:w-8/12 text-center pb-4">
            @foreach (IDocument tag in Document.GetChildren().OrderByDescending(x => x.GetChildren().Count()))
            {
                string postCount = tag.GetChildren().Count().ToString();
                <a role="button" href="@Context.GetLink(tag)" class="inline-block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"> @tag.GetTitle() (@postCount)</a>
            }
        </div>
    </div>
}


@* Reference for tags
https://github.com/statiqdev/CleanBlog/blob/b4238cb28197e66647e796760934e5b6728e382b/input/tags.cshtml *@