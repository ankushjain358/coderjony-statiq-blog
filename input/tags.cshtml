ArchiveSources: => GetString(GlobalMetadataKeys.BlogSources)
ArchiveFilter: => GetBool("IsActive")
ArchiveKey: Tags
ArchiveKeyComparer: => StringComparer.OrdinalIgnoreCase.ToConvertingEqualityComparer()
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/index.html" : $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/{GetInt("Index")}.html"
ArchivePageSize: => GlobalMetadata.GetPageSize(Document)
ArchiveOrderKey: Published
ArchiveOrderDescending: true
ArchiveTitle: => GetString("GroupKey")

Layout: /_Layout.cshtml
Title: Tags
---

@Html.Partial("_partials/_titleHeader")

@if (Document.ContainsKey(Keys.GroupKey))
{
    <div class="row d-flex justify-content-center">
        <div class="col-md-8 text-center pb-5">
                @foreach (IDocument tag in OutputPages.Get("tags.html").GetChildren().OrderByDescending(x =>
               x.GetChildren().Count()))
                {
                    string badgeStyle = Document.GetString(Keys.GroupKey).Equals(tag.GetTitle(),
                    StringComparison.OrdinalIgnoreCase) ? "btn-warning" : "btn-success";
                    string postCount = tag.GetChildren().Count().ToString();
                <a href="@Context.GetLink(tag)" class="btn @badgeStyle mb-2"> @tag.GetTitle() (@postCount)</a>
                }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3 mb-4">
                    @foreach (IDocument document in Document.GetChildren())
                    {
                        @Html.Partial("/_partials/_post.cshtml", document)
                    }
            </div>

        </div>
    </div>
}
else
{
        <div class="row d-flex justify-content-center">
            <div class="col-md-8 text-center pb-4">
                @foreach (IDocument tag in Document.GetChildren().OrderByDescending(x => x.GetChildren().Count()))
                {
                    string postCount = tag.GetChildren().Count().ToString();
                    <a role="button" href="@Context.GetLink(tag)" class="btn btn-success mb-2"> @tag.GetTitle()
                        (@postCount)</a>
                }
            </div>
        </div>
   
}

@* Reference for tags
https://github.com/statiqdev/CleanBlog/blob/b4238cb28197e66647e796760934e5b6728e382b/input/tags.cshtml *@